<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ServiceRecordsDS" targetNamespace="http://tempuri.org/ServiceRecordsDS.xsd" xmlns:mstns="http://tempuri.org/ServiceRecordsDS.xsd" xmlns="http://tempuri.org/ServiceRecordsDS.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CServiceTrackingConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CServiceTrackingConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CommunityServiceDBTracker.Properties.Settings.GlobalReference.Default.CServiceTrackingConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ServiceRecordsTableAdapter" GeneratorDataComponentClassName="ServiceRecordsTableAdapter" Name="ServiceRecords" UserDataComponentName="ServiceRecordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CServiceTrackingConnectionString (Settings)" DbObjectName="dbo.ServiceRecords" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ServiceRecords] WHERE (([Id] = @Original_Id) AND ([StudentId] = @Original_StudentId) AND ([ServiceDate] = @Original_ServiceDate) AND ([ServiceHours] = @Original_ServiceHours))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ServiceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ServiceDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ServiceHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ServiceRecords] ([StudentId], [ServiceDate], [ServiceHours]) VALUES (@StudentId, @ServiceDate, @ServiceHours);
SELECT Id, StudentId, ServiceDate, ServiceHours FROM ServiceRecords WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ServiceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ServiceDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ServiceHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, StudentId, ServiceDate, ServiceHours FROM dbo.ServiceRecords</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ServiceRecords] SET [StudentId] = @StudentId, [ServiceDate] = @ServiceDate, [ServiceHours] = @ServiceHours WHERE (([Id] = @Original_Id) AND ([StudentId] = @Original_StudentId) AND ([ServiceDate] = @Original_ServiceDate) AND ([ServiceHours] = @Original_ServiceHours));
SELECT Id, StudentId, ServiceDate, ServiceHours FROM ServiceRecords WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ServiceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ServiceDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ServiceHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ServiceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ServiceDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ServiceHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\WORK\DOCUMENTS\PERSONAL\TIM\COMMUNITYSERVICEDBTRACKER\CSERVICETRACKING.MDF].dbo.ServiceRecords" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="ServiceDate" DataSetColumn="ServiceDate" />
              <Mapping SourceColumn="ServiceHours" DataSetColumn="ServiceHours" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ServiceRecordsDS" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ServiceRecordsDS" msprop:Generator_UserDSName="ServiceRecordsDS">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ServiceRecords" msprop:Generator_TableClassName="ServiceRecordsDataTable" msprop:Generator_TableVarName="tableServiceRecords" msprop:Generator_TablePropName="ServiceRecords" msprop:Generator_RowDeletingName="ServiceRecordsRowDeleting" msprop:Generator_RowChangingName="ServiceRecordsRowChanging" msprop:Generator_RowEvHandlerName="ServiceRecordsRowChangeEventHandler" msprop:Generator_RowDeletedName="ServiceRecordsRowDeleted" msprop:Generator_UserTableName="ServiceRecords" msprop:Generator_RowChangedName="ServiceRecordsRowChanged" msprop:Generator_RowEvArgName="ServiceRecordsRowChangeEvent" msprop:Generator_RowClassName="ServiceRecordsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:long" />
              <xs:element name="StudentId" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="ServiceDate" msprop:Generator_ColumnVarNameInTable="columnServiceDate" msprop:Generator_ColumnPropNameInRow="ServiceDate" msprop:Generator_ColumnPropNameInTable="ServiceDateColumn" msprop:Generator_UserColumnName="ServiceDate" type="xs:dateTime" />
              <xs:element name="ServiceHours" msprop:Generator_ColumnVarNameInTable="columnServiceHours" msprop:Generator_ColumnPropNameInRow="ServiceHours" msprop:Generator_ColumnPropNameInTable="ServiceHoursColumn" msprop:Generator_UserColumnName="ServiceHours" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ServiceRecords" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>